from typing import Any

class MetaNode(type):
    def __new__(mcs: Any, name: Any, bases: Any, dict: Any): ...

class Node(metaclass=MetaNode):
    attrs: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def __equals__(self, other: Any): ...
    def __iter__(self) -> Any: ...
    def filter(self, pattern: Any) -> None: ...
    @property
    def children(self): ...
    @property
    def position(self): ...

def walk_tree(root: Any) -> None: ...
def dump(ast: Any, file: Any) -> None: ...
def load(file: Any): ...
